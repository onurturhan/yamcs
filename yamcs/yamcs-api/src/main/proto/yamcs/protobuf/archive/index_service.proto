
syntax="proto2";

package yamcs.protobuf.archive;

option java_package = "org.yamcs.protobuf";
option java_outer_classname = "IndexServiceProto";
option java_multiple_files = true;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "yamcs/api/annotations.proto";
import "yamcs/protobuf/yamcs.proto";

service IndexesApi {

  // List command history index
  rpc ListCommandHistoryIndex(ListCommandHistoryIndexRequest) returns (IndexResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/command-index"
    };
  }
  
  // List event index
  rpc ListEventIndex(ListEventIndexRequest) returns (IndexResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/event-index"
    };
  }
  
  // List packet index
  rpc ListPacketIndex(ListPacketIndexRequest) returns (IndexResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/packet-index"
    };
  }
  
  // List parameter index
  rpc ListParameterIndex(ListParameterIndexRequest) returns (IndexResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/parameter-index"
    };
  }
  
  // List completeness index
  rpc ListCompletenessIndex(ListCompletenessIndexRequest) returns (IndexResponse) {
    option (yamcs.api.route) = {
      get: "/api/archive/{instance}/completeness-index"
    };
  }

  // Streams back packet index records
  rpc StreamPacketIndex(StreamPacketIndexRequest) returns (stream ArchiveRecord) {
    option (yamcs.api.route) = {
      post: "/api/archive/{instance}:streamPacketIndex"
      body: "*"
    };
  }
  
  // Streams back parameter index records
  rpc StreamParameterIndex(StreamParameterIndexRequest) returns (stream ArchiveRecord) {
    option (yamcs.api.route) = {
      post: "/api/archive/{instance}:streamParameterIndex"
      body: "*"
    };
  }
  
  // Streams back processed parameter index records
  rpc StreamCommandIndex(StreamCommandIndexRequest) returns (stream ArchiveRecord) {
    option (yamcs.api.route) = {
      post: "/api/archive/{instance}:streamCommandIndex"
      body: "*"
    };
  }
  
  // Streams back event index records
  rpc StreamEventIndex(StreamEventIndexRequest) returns (stream ArchiveRecord) {
    option (yamcs.api.route) = {
      post: "/api/archive/{instance}:streamEventIndex"
      body: "*"
    };
  }
  
  // Streams back event index records
  rpc StreamCompletenessIndex(StreamCompletenessIndexRequest) returns (stream ArchiveRecord) {
    option (yamcs.api.route) = {
      post: "/api/archive/{instance}:streamCompletenessIndex"
      body: "*"
    };
  }
  
  // Rebuild CCSDS TM Index
  rpc RebuildCcsdsIndex(RebuildCcsdsIndexRequest) returns (google.protobuf.Empty) {
    option (yamcs.api.route) = {
      post: "/api/archive/{instance}:rebuildCcsdsIndex"
      body: "*"
    };
  }
}

message ListCommandHistoryIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;
  
  // Value in milliseconds that indicates the maximum gap before two consecutive index
  // ranges are merged together. Default: ``2000``
  optional int32 mergeTime = 2;
  
  // The maximum number of returned entries. Choose this value too high and you risk hitting
  // the maximum response size limit enforced by the server. Default: ``1000``.
  // Note that in general it is advised to control the size of the response via ``mergeTime``,
  // rather than via ``limit``.
  optional int32 limit = 3;
  
  // Filter the lower bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp start = 4;
  
  // Filter the upper bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp stop = 5;
  
  // Continuation token returned by a previous page response.
  optional string next = 6;
  
  // Filter on a specific command
  repeated string name = 7;
}

message ListEventIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;
  
  // Value in milliseconds that indicates the maximum gap before two consecutive index
  // ranges are merged together. Default: ``2000``
  optional int32 mergeTime = 2;
  
  // The maximum number of returned entries. Choose this value too high and you risk
  // hitting the maximum response size limit enforced by the server. Default: ``1000``.
  // Note that in general it is advised to control the size of the response via
  // ``mergeTime``, rather than via ``limit``.
  optional int32 limit = 3;
  
  // Filter the lower bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp start = 4;
  
  // Filter the upper bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp stop = 5;
  
  // Continuation token returned by a previous page response.
  optional string next = 6;
  
  // Filter on specific sources.
  repeated string source = 7;
}

message ListPacketIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;
  
  // Value in milliseconds that indicates the maximum gap before two consecutive index
  // ranges are merged together. Default: ``2000``
  optional int32 mergeTime = 2;
  
  // The maximum number of returned entries. Choose this value too high and you risk
  // hitting the maximum response size limit enforced by the server. Default: ``1000``.
  // Note that in general it is advised to control the size of the response via
  // ``mergeTime``, rather than via ``limit``.
  optional int32 limit = 3;
  
  // Filter the lower bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp start = 4;
  
  // Filter the upper bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp stop = 5;
  
  // Continuation token returned by a previous page response.
  optional string next = 6;
  
  // Filter on specific packet names.
  repeated string name = 7;
}

message ListParameterIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;
  
  // Value in milliseconds that indicates the maximum gap before two consecutive index
  // ranges are merged together. Default: ``20000``
  optional int32 mergeTime = 2;
  
  // The maximum number of returned entries. Choose this value too high and you risk
  // hitting the maximum response size limit enforced by the server. Default: ``1000``.
  // Note that in general it is advised to control the size of the response via
  // ``mergeTime``, rather than via ``limit``.
  optional int32 limit = 3;
  
  // Filter the lower bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp start = 4;
  
  // Filter the upper bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp stop = 5;
  
  // Continuation token returned by a previous page response.
  optional string next = 6;
  
  // Filter on specific parameter groups.
  repeated string group = 7;
}

message ListCompletenessIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;

  // The maximum number of returned entries. Choose this value too high and you risk hitting
  // the maximum response size limit enforced by the server. Default: ``1000``.
  // Note that in general it is advised to control the size of the response via ``mergeTime``,
  //  rather than via ``limit``.
  optional int32 limit = 2;

  // Filter the lower bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp start = 3;

  // Filter the upper bound of the index entries. Specify a date string in ISO 8601 format.
  optional google.protobuf.Timestamp stop = 4;
  
  // Continuation token returned by a previous page response.
  optional string next = 5;
}

message IndexResponse {
  repeated IndexGroup group = 1;
  
  // Token indicating the response is only partial. More results can then
  // be obtained by performing the same request (including all original
  // query parameters) and setting the ``next`` parameter to this token.
  optional string continuationToken = 2;
}

message IndexGroup {
  optional NamedObjectId id = 1;
  repeated IndexEntry entry = 2;
}

message IndexEntry {
  optional string start = 1;
  optional string stop = 2;
  optional int32 count = 3;
  optional int64 seqStart = 4;
  optional int64 seqStop = 5;
}

message StreamPacketIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;

  // The time at which to start retrieving index records.
  optional google.protobuf.Timestamp start = 2;
  
  // The time at which to stop retrieving index records.
  optional google.protobuf.Timestamp stop = 3;

  repeated string names = 4;
}

message StreamParameterIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;

  // The time at which to start retrieving index records.
  optional google.protobuf.Timestamp start = 2;
  
  // The time at which to stop retrieving index records.
  optional google.protobuf.Timestamp stop = 3;
}

message StreamCommandIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;

  // The time at which to start retrieving index records.
  optional google.protobuf.Timestamp start = 2;
  
  // The time at which to stop retrieving index records.
  optional google.protobuf.Timestamp stop = 3;
}

message StreamEventIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;

  // The time at which to start retrieving index records.
  optional google.protobuf.Timestamp start = 2;
  
  // The time at which to stop retrieving index records.
  optional google.protobuf.Timestamp stop = 3;
}

message StreamCompletenessIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;

  // The time at which to start retrieving index records.
  optional google.protobuf.Timestamp start = 2;
  
  // The time at which to stop retrieving index records.
  optional google.protobuf.Timestamp stop = 3;
}

message RebuildCcsdsIndexRequest {
  // Yamcs instance name.
  optional string instance = 1;
  optional google.protobuf.Timestamp start = 2;
  optional google.protobuf.Timestamp stop = 3;
}
