# this file defines the different processors
# A processor is where TM/TC processing happens inside Yamcs.
#
# Each processor uses a source of TM packets, one or more sources of parameters and a command releaser
#  all of these are optional
#
# Note that when you are adding a telemetryProvider, you are implicitly adding also a XtceTmProcessor that provides parameters

realtime:
  services: 
    - class: org.yamcs.StreamTmPacketProvider
      args: 
        streams: ["tm_realtime"]    
    - class: org.yamcs.StreamTcCommandReleaser
      args:
        stream: "tc_realtime"
    - class: org.yamcs.tctm.StreamParameterProvider
      args:
        stream: "pp_realtime"
    # implements XTCE algorithms
    - class: org.yamcs.algorithms.AlgorithmManager
    - class: org.yamcs.parameter.LocalParameterManager
  config:
    #subcribe by default to parameters from all providers (this means also process all incoming TM packets)
    # if this is not enabled(default) then only parameters that are subscribed by client are processed
    # if the alarm checking is enabled below, all parameters that have limits defined are subscribed even if this is set to false
    subscribeAll: true
    #Generate events in case of errors when processing telemetry
    generateEvents: true
    #check alarms and also enable the alarm server (that keeps track of unacknowledged alarms)
    alarm:
      parameterCheck: true
      parameterServer: enabled
    parameterCache:
      enabled: true
      cacheAll: true
      #duration in seconds on how long parameters are kept into cache
      duration: 600
      #maximum number of entries in the cache for one parameter
      maxNumEntries: 4096
    tmProcessor:
      #if container entries fit outside the binary packet, setting this to true will cause the error to be ignored, otherwise an exception will be printed in the yamcs logs
      ignoreOutOfContainerEntries: false


#used to perform step by step archive replays to displays,etc
# initiated from Yamcs Monitor, Yamcs Studio.
# should be renamed to ArchiveReplay
Archive:
  services: 
    - class: org.yamcs.tctm.ReplayService
  config:        
    #keep a small cache in case new displays are open while the replay is paused, to have the parameters readily available
    parameterCache:
      enabled: true
      cacheAll: true
      maxNumEntries: 8


#used by the ParameterArchive when rebuilding the parameter archive
# no need for parameter cache
ParameterArchive:
  services: 
    - class: org.yamcs.tctm.ReplayService
  config:
    #Do not generate events in case of errors when processing telemetry (otherwise it will flood the event log with plenty of repeats)
    generateEvents: false
    parameterCache:
      enabled: false

#used for performing archive retrievals via replays (e.g. parameter-extractor.sh)
# we do not want cache in order to extract the minimum data necessary
ArchiveRetrieval:
  services:
    - class: org.yamcs.tctm.ReplayService
  config:
    #Do not generate events in case of errors when processing telemetry (otherwise it will flood the event log with plenty of repeats)
    generateEvents: false
    parameterCache:
      enabled: false
